-- Chargement de la bibliothèque de notification
local NotificationLoad = loadstring(game:HttpGet('https://raw.githubusercontent.com/treeofplant/Notif/main/library.lua', true))()

if not NotificationLoad then
    error("Notification library failed to load.")
end

-- Créer les éléments GUI
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local TextBox1 = Instance.new("TextBox") -- Nouveau TextBox pour l'ID de musique
local TextBox2 = Instance.new("TextBox") -- Nouveau TextBox pour l'ID de musique de maison
local SendButton = Instance.new("TextButton")
local HouseSendButton = Instance.new("TextButton") -- Nouveau bouton pour envoyer la musique de maison
local ToggleButton = Instance.new("TextButton")

-- Fonction d'application des coins arrondis
local function applyCorners(instance, cornerRadius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, cornerRadius)
    corner.Parent = instance
end

-- Propriétés du GUI
ScreenGui.Name = "CustomGui"
ScreenGui.Parent = game.CoreGui

MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Position = UDim2.new(0.5, -120, 0.5, -100) -- Centré
MainFrame.Size = UDim2.new(0, 240, 0, 200) -- Taille réduite
applyCorners(MainFrame, 10)

-- TextBox pour l'ID de musique
TextBox1.Parent = MainFrame
TextBox1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextBox1.Position = UDim2.new(0.1, 0, 0.1, 0) -- Positionné en haut à gauche
TextBox1.Size = UDim2.new(0.35, 0, 0.3, 0) -- Taille réduite
TextBox1.Font = Enum.Font.SourceSans
TextBox1.PlaceholderText = "Enter music ID"
TextBox1.Text = ""
TextBox1.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox1.TextSize = 12 -- Réduit la taille du texte
applyCorners(TextBox1, 8)

-- TextBox pour l'ID de musique de maison
TextBox2.Parent = MainFrame
TextBox2.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TextBox2.Position = UDim2.new(0.55, 0, 0.1, 0) -- Positionné en haut à droite
TextBox2.Size = UDim2.new(0.35, 0, 0.3, 0) -- Taille réduite
TextBox2.Font = Enum.Font.SourceSans
TextBox2.PlaceholderText = "Enter house music ID"
TextBox2.Text = ""
TextBox2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox2.TextSize = 12 -- Réduit la taille du texte
applyCorners(TextBox2, 8)

-- Bouton d'envoi pour la musique
SendButton.Parent = MainFrame
SendButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
SendButton.Position = UDim2.new(0.1, 0, 0.6, 0) -- Positionné en bas à gauche
SendButton.Size = UDim2.new(0.35, 0, 0.25, 0) -- Taille réduite
SendButton.Font = Enum.Font.GothamBold
SendButton.Text = "Send Music"
SendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SendButton.TextSize = 12 -- Réduit la taille du texte
applyCorners(SendButton, 8)

-- Nouveau bouton d'envoi pour la musique de maison
HouseSendButton.Parent = MainFrame
HouseSendButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
HouseSendButton.Position = UDim2.new(0.55, 0, 0.6, 0) -- Positionné en bas à droite
HouseSendButton.Size = UDim2.new(0.35, 0, 0.25, 0) -- Taille réduite
HouseSendButton.Font = Enum.Font.GothamBold
HouseSendButton.Text = "Send Music"
HouseSendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HouseSendButton.TextSize = 12 -- Réduit la taille du texte
applyCorners(HouseSendButton, 8)

-- Créer le bouton Toggle UI
ToggleButton.Parent = ScreenGui
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
ToggleButton.Position = UDim2.new(0.5, -350, 0, 25) -- Positionné en haut au centre
ToggleButton.Size = UDim2.new(0, 100, 0, 30)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Text = "Toggle UI"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 14
applyCorners(ToggleButton, 8)

-- Importer TweenService pour créer des animations douces
local TweenService = game:GetService("TweenService")

-- Fonction pour animer l'apparition et la disparition du MainFrame et de ses enfants
local function animateGuiElements(isVisible, duration)
    local tweenInfo = TweenInfo.new(
        duration, -- Durée de l'animation
        Enum.EasingStyle.Quad, -- Style de transition
        Enum.EasingDirection.Out -- Direction de la transition
    )

    -- Objectifs d'animation pour les éléments GUI
    local mainFrameGoal = {BackgroundTransparency = isVisible and 0 or 1}
    local textBox1Goal = {BackgroundTransparency = isVisible and 0 or 1, TextTransparency = isVisible and 0 or 1}
    local textBox2Goal = {BackgroundTransparency = isVisible and 0 or 1, TextTransparency = isVisible and 0 or 1}
    local sendButtonGoal = {BackgroundTransparency = isVisible and 0 or 1, TextTransparency = isVisible and 0 or 1}
    local houseSendButtonGoal = {BackgroundTransparency = isVisible and 0 or 1, TextTransparency = isVisible and 0 or 1}

    -- Créer et jouer les animations pour chaque élément
    local mainFrameTween = TweenService:Create(MainFrame, tweenInfo, mainFrameGoal)
    local textBox1Tween = TweenService:Create(TextBox1, tweenInfo, textBox1Goal)
    local textBox2Tween = TweenService:Create(TextBox2, tweenInfo, textBox2Goal)
    local sendButtonTween = TweenService:Create(SendButton, tweenInfo, sendButtonGoal)
    local houseSendButtonTween = TweenService:Create(HouseSendButton, tweenInfo, houseSendButtonGoal)

    -- Lancer les animations
    mainFrameTween:Play()
    textBox1Tween:Play()
    textBox2Tween:Play()
    sendButtonTween:Play()
    houseSendButtonTween:Play()
end

-- Au démarrage du script, le GUI s'affiche immédiatement
animateGuiElements(true, 0.5) -- Animation d'apparition initiale

-- Fonction pour toggler le GUI avec animation douce
ToggleButton.MouseButton1Click:Connect(function()
    if MainFrame.Visible then
        animateGuiElements(false, 0.5)  -- Animation de disparition
        wait(0.5)
        MainFrame.Visible = false
    else
        MainFrame.Visible = true
        animateGuiElements(true, 0.5)  -- Animation d'apparition
    end
end)

-- Fonction pour créer une notification
local function createNotification(title, description, timeout)
    NotificationLoad:NewNotification({
        ["Mode"] = "Custom",
        ["Title"] = title,
        ["Description"] = description,
        ["Notification_Image"] = "rbxassetid://",
        ["Notification_Sound"] = "rbxassetid://6031098704",
        ["Timeout"] = timeout or 5,
        ["Audio"] = false 
    })
end

-- Fonction pour envoyer les données au serveur pour la musique
SendButton.MouseButton1Click:Connect(function()
    local musicId = TextBox1.Text

    -- Validation simple
    if musicId == "" then
        createNotification("Error", "Please enter a valid music ID.", 5)
        return
    end

    -- Arguments pour FireServer
    local args = {
        [1] = "PickingScooterMusicText",
        [2] = musicId
    }

    -- Envoie au serveur via FireServer
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))

    -- Notification avec le résultat
    createNotification("Success", "Music ID sent successfully!", 5)

    -- Réinitialisation du TextBox après envoi
    TextBox1.Text = ""
end)

-- Fonction pour envoyer les données au serveur pour la musique de maison
HouseSendButton.MouseButton1Click:Connect(function()
    local houseMusicId = TextBox2.Text

    -- Validation simple
    if houseMusicId == "" then
        createNotification("Error", "Please enter a valid house music ID.", 5)
        return
    end

    -- Arguments pour FireServer avec les nouvelles valeurs
    local args = {
        [1] = "PickHouseMusicText", -- Remplacement de la valeur précédente
        [2] = houseMusicId -- Utilisation de l'ID de musique de maison entré par l'utilisateur
    }

    -- Envoie au serveur via FireServer
    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args)) -- Remplacement de l'ancienne référence

    -- Notification avec le résultat
    createNotification("Success", "House music ID sent successfully!", 5)

    -- Réinitialisation du TextBox après envoi
    TextBox2.Text = ""
end)
